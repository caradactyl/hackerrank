import java.io.File;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

/**
 * Problem Statement
 *
 * Task
 * Given a time range during which the Java Random generator was seeded
 * and the last ten output values of random.NextInt(1000), guess the next
 * value to be output by the generator.
 *
 * Input Format
 * The first line of input is a number N<10 indicating the number of
 * test cases to follow. For each of the N test cases, a like will follow
 * containing two space separated Unix timestamps representing the time 
 * during which the random number generator instance was created.
 * The range between the two timestamps will be at most 1000000.
 * First ten number sequentially generated by the same Random instances's
 * nextInt(1000) function will follow, one on each line.
 *
 * Output Format
 * For each test case, output a line consisting of the seed used
 * to create the generator and the next 10 integers that are output from
 * random.nextInt(1000), separated by spaces.
 *
 * @author Cara Magliozzi
 *
 */

public class PRNGSequenceGuessing 
{
	public static void main(String[] args) throws IOException
	{
		/*
		 * read from System.in instead of file for HackerRank submission
		 */
		Scanner in = new Scanner( new File("resources/prng_test0.txt") );
		int N = in.nextInt();

		while (N-- > 0)
		{
			int start_time = in.nextInt();
			int end_time = in.nextInt();

			int[] nums = new int[10];
			for (int i = 0; i < 10; i++)
				nums[i] = in.nextInt();

			findSeed(N, start_time, end_time, nums);
		}
	}

	public static void findSeed(int N, int start_time, int end_time, int[] nums)
	{
		for (int seed = start_time; seed <= end_time; seed++)
		{
			Random r = new Random(seed);
			boolean good = true;
			
			for (int i = 0; i < 10; i++) 
			{
				if (r.nextInt(1000) != nums[i])
					good = false;
			}
			
			if (good)
			{
				StringBuffer sb = new StringBuffer();
				sb.append(seed);
				
				for (int i = 0; i < 10; i++)
				{
					sb.append(" ");
					sb.append(r.nextInt(1000));
				}
				System.out.println(sb.toString());
			}
		}
	}	
}
